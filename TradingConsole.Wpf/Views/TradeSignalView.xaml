<UserControl x:Class="TradingConsole.Wpf.Views.TradeSignalView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:TradingConsole.Wpf.Views"
             xmlns:viewModels="clr-namespace:TradingConsole.Wpf.ViewModels"
             xmlns:converters="clr-namespace:TradingConsole.Wpf.Converters"
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance Type=viewModels:TradeSignalViewModel, IsDesignTimeCreatable=True}"
             d:DesignHeight="450" d:DesignWidth="800" Background="#FF1E1E1E">

    <UserControl.Resources>
        <converters:BooleanToVisibilityConverter x:Key="BoolToVis" />
        <converters:ValueToSignConverter x:Key="ValueToSignConverter"/>
        <local:CountToVisibilityConverter x:Key="CountToVisibilityConverter"/>

        <Style x:Key="ConvictionBarStyle" TargetType="ProgressBar">
            <Setter Property="Height" Value="10"/>
            <Setter Property="Minimum" Value="-10"/>
            <Setter Property="Maximum" Value="10"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ProgressBar">
                        <Grid>
                            <Rectangle Fill="#FF444444" RadiusX="5" RadiusY="5"/>
                            <Grid ClipToBounds="True">
                                <Rectangle x:Name="PART_Track" Fill="Transparent" />
                                <Rectangle x:Name="PART_Indicator" HorizontalAlignment="Left" RadiusX="5" RadiusY="5"/>
                            </Grid>
                            <Border BorderBrush="#888" BorderThickness="1" CornerRadius="5"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ConvictionBarConditionalStyle" TargetType="ProgressBar" BasedOn="{StaticResource ConvictionBarStyle}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding ConvictionScore}" Value="0">
                    <Setter Property="Foreground" Value="Gray"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=ConvictionScore, Converter={StaticResource ValueToSignConverter}}" Value="Positive">
                    <Setter Property="Foreground" Value="#FF4CAF50"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=ConvictionScore, Converter={StaticResource ValueToSignConverter}}" Value="Negative">
                    <Setter Property="Foreground" Value="#FFF44336"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ExpanderToggleStyle" TargetType="ToggleButton">
            <Setter Property="FontFamily" Value="Segoe MDL2 Assets"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Foreground" Value="LightGray"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border Background="Transparent" Padding="4">
                            <TextBlock x:Name="Glyph" Text="&#xE70E;" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="Glyph" Property="Text" Value="&#xE70D;"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </UserControl.Resources>
    <Grid>
        <DataGrid ItemsSource="{Binding SignalResults}"
                  CanUserAddRows="False"
                  CanUserDeleteRows="False"
                  IsReadOnly="True"
                  AutoGenerateColumns="False"
                  RowHeaderWidth="0"
                  GridLinesVisibility="Horizontal"
                  Background="Transparent"
                  Foreground="White"
                  BorderBrush="#FF444444"
                  HorizontalGridLinesBrush="#FF444444"
                  RowDetailsVisibilityMode="Collapsed">
            <!-- Set to Collapsed initially -->

            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Setter Property="Background" Value="#FF2D2D30"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="Margin" Value="0,1"/>
                    <!-- Use IsExpanded property for RowDetailsVisibility -->
                    <Setter Property="DetailsVisibility" Value="{Binding IsExpanded, Converter={StaticResource BoolToVis}}"/>
                    <EventSetter Event="MouseLeftButtonUp" Handler="DataGridRow_MouseLeftButtonUp"/>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FF3E3E42"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="#FF007ACC"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>

            <DataGrid.ColumnHeaderStyle>
                <Style TargetType="DataGridColumnHeader">
                    <Setter Property="Background" Value="#FF3E3E42"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="BorderThickness" Value="0,0,1,1"/>
                    <Setter Property="BorderBrush" Value="#FF444444"/>
                    <Setter Property="Padding" Value="10,5"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                </Style>
            </DataGrid.ColumnHeaderStyle>

            <DataGrid.Columns>
                <DataGridTemplateColumn>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ToggleButton IsChecked="{Binding IsExpanded, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                          Style="{StaticResource ExpanderToggleStyle}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTextColumn Header="Symbol" Binding="{Binding Symbol}" Width="*">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="Padding" Value="10,5"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                            <Setter Property="FontWeight" Value="SemiBold"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>

                <DataGridTextColumn Header="Overall Signal" Binding="{Binding IndexSignal.OverallSignal}" Width="1.5*">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="VerticalAlignment" Value="Center"/>
                            <Setter Property="FontWeight" Value="Bold"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IndexSignal.OverallSignal}" Value="Strong Buy Opportunity">
                                    <Setter Property="Foreground" Value="#FF4CAF50"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IndexSignal.OverallSignal}" Value="Cautious Buy">
                                    <Setter Property="Foreground" Value="#FF8BC34A"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IndexSignal.OverallSignal}" Value="Strong Sell Opportunity">
                                    <Setter Property="Foreground" Value="#FFF44336"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IndexSignal.OverallSignal}" Value="Cautious Sell">
                                    <Setter Property="Foreground" Value="#FFFF9800"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IndexSignal.OverallSignal}" Value="Observe / No Clear Edge">
                                    <Setter Property="Foreground" Value="Gray"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>

                <DataGridTextColumn Header="Bias" Binding="{Binding IndexSignal.Bias}" Width="*"/>
                <DataGridTextColumn Header="Trend" Binding="{Binding IndexSignal.TrendDirection}" Width="*"/>
                <DataGridTextColumn Header="Momentum" Binding="{Binding IndexSignal.Momentum}" Width="*"/>
                <DataGridTextColumn Header="Volatility" Binding="{Binding IndexSignal.Volatility}" Width="*"/>

            </DataGrid.Columns>

            <DataGrid.RowDetailsTemplate>
                <DataTemplate>
                    <Border Background="#FF333337" Padding="20" Margin="12,0,12,10" CornerRadius="5">
                        <StackPanel>
                            <TextBlock Text="Comprehensive Index Thesis" FontWeight="Bold" FontSize="16" Foreground="White" Margin="0,0,0,10"/>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <TextBlock Grid.Row="0" Grid.Column="0" Text="Conviction:" FontWeight="SemiBold" Foreground="LightGray" Margin="5" VerticalAlignment="Center"/>
                                <TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding IndexSignal.TrendConviction}" TextWrapping="Wrap" Foreground="White" Margin="5" VerticalAlignment="Center"/>

                                <TextBlock Grid.Row="1" Grid.Column="0" Text="Narrative:" FontWeight="SemiBold" Foreground="LightGray" Margin="5" VerticalAlignment="Center"/>
                                <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding MarketNarrative}" TextWrapping="Wrap" Foreground="LightGray" Margin="5" VerticalAlignment="Center"/>
                            </Grid>

                            <Grid Margin="0,15,0,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <StackPanel Grid.Column="0" Margin="5,0">
                                    <TextBlock Text="Supporting Factors" FontWeight="Bold" Foreground="#4CAF50" Margin="0,0,0,5"/>
                                    <ItemsControl ItemsSource="{Binding IndexSignal.SupportingFactors}">
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding}" TextWrapping="Wrap" Foreground="LightGray" Margin="5,2"/>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                </StackPanel>
                                <StackPanel Grid.Column="1" Margin="5,0">
                                    <TextBlock Text="Contradicting Factors" FontWeight="Bold" Foreground="#F44336" Margin="0,0,0,5"/>
                                    <ItemsControl ItemsSource="{Binding IndexSignal.ContradictingFactors}">
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding}" TextWrapping="Wrap" Foreground="LightGray" Margin="5,2"/>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                </StackPanel>
                            </Grid>
                        </StackPanel>
                    </Border>
                </DataTemplate>
            </DataGrid.RowDetailsTemplate>
        </DataGrid>
    </Grid>
</UserControl>
